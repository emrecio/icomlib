%!PS-Adobe-3.0
%%Creator: WordPerfect-6.1
%%Pages: (atend)
%%BoundingBox: (atend)
%%DocumentNeededFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: WPProcs-V6.01
/wpdict 300 dict def wpdict begin
/d{bind def}bind def/l{load def}d/ec{exec def}d/cp/closepath l/cup/currentpoint l/cs/currentscreen l
/cv/curveto l/drx{dtransform round x round x}d/f/eofill l/g/setgray l/gr/grestore l
/gs/gsave l/ife{ifelse}d/ix/index l/li/lineto l/lc/setlinecap l
/lj/setlinejoin l/m/moveto l/mx/matrix l/mcm{mx currentmatrix}d/sm/setmatrix l
/np/newpath l/p/pop l/re/rotate l/rh/readhexstring l/rl/rlineto l/rm/rmoveto l/rs/restore l
/setfl{dup 1 le{p 1 setflat}{setflat}ife}def/languagelevel where{p languagelevel}{1}ife
2 lt{/sf{bzcnt 70 div setfl}d/fpath{bzcnt 4 div setflat}d}{/sf{}d/fpath{}d}ife
/cf currentflat def/s{fpath flattenpath stroke}d/sc/scale l
/sd/setdash l/ss/setscreen l/sv/save l/tr/translate l
/w/setlinewidth l/x/exch l/xd{x def}d/c{3{255 div 3 1 roll}repeat setrgbcolor}d
/bF false def/bF2 false def/bf 0 def/ds{gs 1 lc s gr}d/gd{255 div g}d
/h{0 rm}d
/lp{px li}d/mp{px m}d/nb 50 string def/osv 0 def/icl/initclip l/pf{gs f gr}def
/pff{gs fill gr}def/pl{{px li}repeat}d/ps{gs s gr}def/plen 0 def/pwid 0 def
/px{transform .25 sub round .25 add x .25 sub round .25 add x itransform}d
/pxd{drx idtransform}d/rlp{pxd rl}d/rmp{pxd rm}d/_g{g}d/_lr{rlp}d/_s{s}d
/_w{w}d/_m{mp}d/_rmxy{rmp}d/bzcnt 0 def/bzct{/bzcnt xd}def
/bzcl{/bzcnt 0 def cf setflat}def/rF false def/sF false def/pth 0 def/ptw 0 def/pths 0 def/ptws 0 def/PColor 0 def
/instpat 0 def/cm 0 def/slan 0 def/hscl 0 def/psz 0 def/xres 0 def/yres 0 def/pstr 0 def/lutb 0 def
/rot 0 def/mir 0 def/HTd 0 def/WDd 0 def/ury 0 def/llx 0 def/lly 0 def/exstr 0 def/HTs 0 def/WDs 0 def
/Hs 0 def/Ws 0 def/imc 0 def/Bdep 0 def/clu 0 def/curx 0 def/cury 0 def/Sx 0 def/Sy 0 def/xpos 0 def
/ypos 0 def/lw 0 def/DUy 0 def/DUx 0 def/Ux 0 def/Uy 0 def/cml 0 def
/cp3{3 copy}d/cp4{4 copy}d/cp6{6 copy}d/aosh{cp3 -4 -4 rm gs ashow gr
cp3 4 0 rm gs ashow gr cp3 4 0 rm gs ashow gr cp3 0 4 rm gs ashow gr
cp3 0 4 rm gs ashow gr cp3 -4 0 rm gs ashow gr cp3 -4 0 rm gs ashow gr
cp3 0 -4 rm gs ashow gr currentrgbcolor 6 3 roll 1 g 4 0 rm ashow setrgbcolor}d
/wosh{cp4 -4 -4 rm gs widthshow gr
cp4 4 0 rm gs widthshow gr cp4 4 0 rm gs widthshow gr cp4 0 4 rm gs widthshow gr
cp4 0 4 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr
cp4 0 -4 rm gs widthshow gr currentrgbcolor 7 3 roll 1 g 4 0 rm widthshow setrgbcolor}d
/awosh{cp6 -4 -4 rm gs awidthshow gr
cp6 4 0 rm gs awidthshow gr cp6 4 0 rm gs awidthshow gr cp6 0 4 rm gs awidthshow gr
cp6 0 4 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr
cp6 0 -4 rm gs awidthshow gr currentrgbcolor 9 3 roll 1 g 4 0 rm awidthshow setrgbcolor}d
/assh{sv gs psz 20 div dup neg rm 4 1 roll cp3 ashow gr cp3 sv 4 1 roll currentfont/PaintType known
{bf setfont}if 1 g ashow rs currentfont/PaintType known{currentfont mo setfont ashow}{aosh}ife cup 3 -1 roll rs m}d
/wssh{sv gs psz 20 div dup neg rm 5 1 roll cp4 widthshow gr cp4 sv currentfont/PaintType known{bf setfont}if
1 g 5 1 roll widthshow rs currentfont/PaintType known{currentfont mo setfont widthshow}{wosh}ife cup 3 -1 roll rs m}d
/awssh{sv gs psz 20 div dup neg rm 7 1 roll cp6 awidthshow gr cp6 sv currentfont/PaintType known{bf setfont}if
1 g 7 1 roll awidthshow rs currentfont/PaintType known{currentfont mo setfont awidthshow}{awosh}ife cup 3 -1 roll rs m}d
/B{/bF true def sF not{/S/bsh l/bF2 true def}if}d
/b{/bF false def bF2{/S/show l/bF2 false def}if}d
/bd{sv}d/bp{sv .06 .06 sc 0 0 m}d/bsh{gs psz 30 div 0 rm dup show gr show}d
/clr{rF{6 3 roll p p p}{eq3{p p gd}{c}ife}ife}d/co{/pwid xd/plen xd
osv 1 eq{0 pwid tr -90 re}if osv 2 eq{pwid plen tr 180 re}if
osv 3 eq{plen 0 tr 90 re}if dup 1 eq{pwid 0 tr 90 re}if
dup 2 eq{pwid plen tr 180 re}if dup 3 eq{0 plen tr -90 re}if/osv xd}d
/cw{s initclip m 0 2 ix rl 0 rl 0 x neg rl clip np}d
/DU{cup/DUy xd/DUx xd}d/du{gs sv 12 w cup -24 add m DUx DUy -24 add li s rs
12 w cup -48 add m DUx DUy -48 add li s gr}d/ed{rs}d/ep{rs showpage 0 0 m}d
/eq3{3 copy 2 ix eq{eq{true}{false}ife}{p p false}ife}d
/ff{x rc x 3 div dup/psz xd scalefont dup/bf xd setfont}d
/ffs{/slan x 10 div def/hscl x 1000 div def/psz x 3 div def
[psz hscl mul 0 slan dup sin x cos div psz mul psz 0 0]
x rc x makefont dup/bf xd setfont}d/fr{72 0 rmtx defaultmatrix dtransform
/yres xd/xres xd xres dup mul yres dup mul add sqrt}d
/is{sv 4 1 roll dup/pstr x 7 add 8 idiv string def
3 1 roll tr dup 1 sc dup 1 1[5 -1 roll 0 0 1 0 0]{currentfile pstr rh p}
cml 0 eq{image}{false 3 colorimage}ife rs}d/cexp{exstr 0 lutb 3 copy 7 -1 roll
{get putinterval x 3 add x 3 copy}forall p p p p p}d/bwexp{dup 0 lutb 3 copy 7 -1 roll
{get put x 1 add x 3 copy}forall p p p p p}d/NOM 0 def/INX 1 def/INY 2 def
/p1x 0 def/p1y 0 def/p2x 0 def/p2y 0 def/p3x 0 def/p3y 0 def
/idef{/p3y xd/p3x xd/p2y xd/p2x xd/p1y xd/p1x xd
/rot xd/mir xd p3x p1x sub 1 add dup mul p1y p3y sub 1 add
dup mul add sqrt/HTd xd p2y p1y sub 1 add dup mul p2x p1x
sub 1 add dup mul add sqrt/WDd xd}def
/mirror{mir NOM eq{Ws Hs sc}{mir INX eq{Ws neg Hs sc}
{mir INY eq{Ws Hs neg sc}{Ws neg Hs neg sc}ife}ife}ife}def
/ic{sv 6 1 roll tr 2 ix 2 ix sc[3 ix 0 0 5 ix neg 0 7 ix]
2 1 roll true 3 1 roll imagemask rs}d/ieps{/ury xd/urx xd/lly xd/llx xd idef
ury lly sub/HTs xd urx llx sub/WDs xd
WDd WDs div/Ws xd HTd HTs div/Hs xd
p3x p3y tr rot re mirror llx neg lly neg tr}def
/im{sv 15 1 roll dup/pstr x string def/exstr x 3 mul string def
/HTs xd/WDs xd/imc xd/Bdep xd/clu xd
idef p1x p1y m cup transform/cury xd/curx xd rot re
/Ws WDd def/Hs HTd def mirror curx cury itransform tr WDs HTs Bdep
[WDs 0 0 HTs neg 0 0]{currentfile pstr rh p
clu 1 eq{cexp}if clu 2 eq{bwexp}if}
imc 0 eq{image}{false 3 colorimage}ife rs}d
/kp{initclip clip np}d/l1{cup osv plen pwid 6 -1 roll rs sv}d
/l2{p bp 6 1 roll co m}d/osh{dup -4 -4 rm gs show gr
dup 4 0 rm gs show gr dup 4 0 rm gs show gr dup 0 4 rm gs show gr
dup 0 4 rm gs show gr dup -4 0 rm gs show gr dup -4 0 rm gs show gr
dup 0 -4 rm gs show gr currentrgbcolor 4 3 roll 1 g 4 0 rm show setrgbcolor}d
/mo{dup/OutlineFlag known not{dup dup length 2 add dict begin
{1 ix/FID ne{def}{p p}ife}forall/UniqueID known{/UniqueID UniqueID 10000 add def}if
/PaintType PaintType 0 eq{2}{PaintType}ife def/StrokeWidth 15 def/OutlineFlag true def
/OutlineFont currentdict end definefont}if}d/O{currentfont/PaintType known{currentfont mo setfont}{/S/osh l}ife}d
/o{currentfont/PaintType known{bf setfont}{/S/show l}ife}d/R{/rF true def currentrgbcolor 1 .25 .25 setrgbcolor}d
/r{/rF false def eq3{1 sub neg gd p p}{setrgbcolor}ife}d/rc{dup FontDirectory x known{findfont}
{dup nb cvs dup length 1 sub get 82 eq{dup nb cvs dup length 1 sub 0 x getinterval
findfont begin currentdict dup length dict begin
{1 ix/FID ne{def}{p p}ife}forall/FontName xd/Encoding WPen def
currentdict dup end end/FontName get x definefont}
{findfont}ife}ife}d/rmtx mx def/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sg{neg 100 add 100 div g}d/SH{bF2{/bF2 false def}if/S/ssh l/A/assh l/W/wssh l/AW/awssh l/sF true def}d
/sh{/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sF false def bF{B}if}d/sp{gs s gr}d/ssh{sv x gs psz 20 div dup neg rm dup show gr dup sv x
currentfont/PaintType known{bf setfont}if 1 g show rs currentfont/PaintType known{currentfont mo setfont show}{osh}ife
cup 3 -1 roll rs m}d/ST{cup/Sy xd/Sx xd}d
/st{gs cup psz 4 div add mp Sx Sy psz 4 div add lp 10 w s gr}d
/U{cup/Uy xd/Ux xd}d/u{gs cup -24 add m Ux Uy -24 add li 12 w s gr}d
/ul{cup osv plen pwid 7 -2 roll rs rs bp 6 1 roll co m}d/WPen StandardEncoding 256 array copy def 0
[127/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla
/Delta/Eacute/Ecircumflex/Edieresis/Egrave/Eth/Gamma/Iacute/Icircumflex/Idieresis/Igrave/Lambda/Ntilde/Oacute
/Ocircumflex/Odieresis/Ograve/Omega/Otilde/Phi/Pi/Psi/Scaron/Sigma/TeXtext32/Theta/Thorn
176/Pts
181/dbar
190/Hbar
192/hbar
201/Ldot
204/ldot
209/Uacute/Ucircumflex/Udieresis/Ugrave/Upsilon/Xi/Yacute
/Ydieresis/Zcaron/aacute/acircumflex/adieresis/agrave/aring/atilde/brokenbar
226/approxequal
228/ccedilla/copyright/degree/divide
236/dotlessj/eacute/ecircumflex/edieresis/egrave
242/eth/ff/ffi
246/ffl/iacute
252/icircumflex/idieresis/igrave/logicalnot
1/minus/mu/multiply/ntilde/oacute/ocircumflex/odieresis/ograve/onehalf/onequarter/onesuperior/otilde/plusminus
/registered/scaron/thorn/threequarters/threesuperior/trademark/twosuperior/uacute/ucircumflex/udieresis
/ugrave/yacute/ydieresis/zcaron/IJ/ij/Eng/eng
]{dup type/nametype eq{WPen 2 ix 2 ix put p 1 add}{x
p}ife}forall p/URy 0 def/URx 0 def/LLy 0 def/LLx 0 def/dxcg 0 def/dx1 0 def/dx2 0 def/dx3 0 def
/cgray	0 def/curstep -1 def/dis 0 def/steps 0 def/gsteps 0 def/grot 0 def/gtype 0 def/ry 0 def
/rx 0 def/botg 0 def/topg 0 def/bgc 0 def/tgc 0 def/cgc 0 def
/extents{fpath flattenpath pathbbox/URy xd/URx xd/LLy xd/LLx xd}def
/dxcolor{cml 0 eq{cgray dxcg sub dup/cgray xd curstep -1 eq{g}
{/curstep curstep 1 sub def curstep 1 eq{p botg gd}{g}ife}ife}
{cgc aload p dx3 sub 3 1 roll dx2 sub 3 1 roll
dx1 sub 3 1 roll 3 array astore/cgc xd
cgc aload p setrgbcolor}ife}d/box{LLx LLy m URx LLy li URx URy li LLx URy li cp s}def
/calcdx{sub gsteps 1 sub div 255 div}def
/computegdx{topg botg calcdx/dxcg xd}def/computeRGBdx{mark tgc aload p bgc aload p
3 ix 1 ix calcdx/dx3 xd 4 ix 2 ix calcdx/dx2 xd
5 ix 3 ix calcdx/dx1 xd cleartomark}def
/ccdx{cml 0 eq{computegdx}{computeRGBdx}ife}def/stclr{cml 0 eq{topg gd/cgray currentgray def}
{tgc aload p c currentrgbcolor 3 array astore/cgc xd}ife}def/sgf{/steps gsteps .5 sub def
/midx LLx abs def/midy URy abs def
/width URx LLx sub def/dx width midx sub steps div def
/height URy LLy sub def/dy height midy sub steps div def
/dw width steps div def/dl height steps div def
width w stclr/xpos LLx def/ypos URy def/lw width def/lh height def
gsteps{xpos lw 2 div add ypos m xpos lw 2 div add ypos
lh sub li s/lh lh dl sub def/ypos ypos dy sub def
gtype 1 eq{/lw lw dw sub def/xpos xpos dx add def lw w}if
dxcolor}repeat/curstep -1 def}def
/dfc{dup mul x dup mul add sqrt dup dis gt{/dis xd}{p}ife}def
/fdis{/midx 0 def /midy 0 def
/width URx LLx sub def/gcx width rx mul def/height URy LLy sub def/gcy height ry mul def
gcx gcy dfc width gcx sub gcy dfc
width gcx sub height gcy sub dfc gcx height gcy sub dfc}def/rgf{/steps gsteps def
fdis/lw dis steps .5 sub div def/radius lw def lw 2 div w stclr
midx lw 2 div sub midy m midx midy radius 2 div 0 361 arc s lw w
steps 1 sub
dup/curstep xd/curstep curstep 1 add def
{dxcolor midx midy radius 0 361 arc s/radius radius lw add def}repeat/curstep -1 def}def
/gf{fpath flattenpath/inbbox xd/gsteps xd/grot xd/gtype xd/ry x 100 div def/rx x 100 div def
cml 0 eq{gtype 1 eq{x}if/botg xd/topg xd}{gtype 2 ne{6 3 roll}if
3 array astore/bgc xd
3 array astore/tgc xd}ife
sv[]0 sd eoclip
inbbox length 4 eq{np inbbox aload p m li}if
gsteps 1 eq
{stclr f}{mcm 3 get 0 gt{/grot grot 180 add def}if
gtype 2 eq{/rx 1.0 rx sub def/ry 1.0 ry sub def}if
extents /newx URx LLx sub 1 rx sub mul LLx add def
/newy URy LLy sub ry mul LLy add def
newx newy tr
xRyR 1 idtransform div abs 1 sc
grot re extents
gsteps 0 eq{csteps}if
ccdx gtype 0 eq
{sgf}{gtype 1 eq{sgf}{rgf}ife}ife}ife rs}d/csteps{fdis dis 72 div fr mul	cs p p dup xres
eq{p p/gsteps xres def}{div/gsteps x round cvi dup 1 le{p 2}if def}ife}def
/ssf{dup 0 eq{p}{cs 3 ix 3 1 roll ss p p}ife}d/ssa{cs 4 1 roll p 1 ix 4 -1 roll ss p}d
/invalidcolortable? true def
/pdfmark where{p}{userdict/pdfmark/cleartomark load put}ifelse
/PATsc{aload length dup 1 eq{p dup null eq{p}{gd}ife}{p c}ife}d
/PATtcalc{gs x concat mcm x 2 ne{dup 4 get x dup 5 get x
XStep 0 drx XStep div x XStep div x 0 YStep drx YStep div x YStep div x
7 -3 roll astore}if gr}d
/PATmp{x dup length 7 add dict copy begin TilingType PATtcalc
/cm xd currentdict/Multi known not{/Multi 1 def}if/FontType 3 def/Encoding 256 array def
3 string 0 1 255{Encoding x dup 3 ix cvs cvn put}for p
/FontMatrix mx def/FontBBox BBox def/BuildChar{mark 3 1 roll x begin
Multi 1 ne{PaintData x get}{p}ife PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload p setcachedevice}{XStep 0 setcharwidth}ife currentdict/PaintProc load
end gs false PATredef exec true PATredef gr
cleartomark}d currentdict end/foo x definefont}d
/PATpcalc{PATDict/CurrentPattern get begin gs
cm sm BBox aload p p p tr pathbbox
gr YStep div ceiling 4 1 roll XStep div ceiling 4 1 roll
YStep div floor 4 1 roll XStep div floor 4 1 roll
2 ix sub cvi abs x 3 ix sub cvi abs x
4 2 roll YStep mul x XStep mul x end}d/PATfill{sv 5 1 roll PATDict/CurrentPattern get dup begin
setfont cm sm PaintType 2 eq{PATDict/PColor get PATsc}if
3 ix string 0 1 Multi 1 sub{3 ix 3 ix m
Multi 1 ne{dup PaintColors x get dup null ne{PATsc}{p}ife}if
0 1 7 ix 1 sub{2 ix x 2 ix put}for p
3 ix{cup 2 ix show YStep add m}repeat}for
5{p}repeat end rs}d/oldeofill/eofill l
/oldfill/fill l/oldstroke/stroke l/oldshow/show l/oldwidthshow/widthshow l/PATredef{userdict begin
{/eofill{/eoclip load PATdraw np}d/fill{/clip load PATdraw np}d
/stroke{PATstroke}d/show{0 0 null 0 0 6 -1 roll PATawidthshow}d
/widthshow{0 0 3 -1 roll PATawidthshow}d}{/eofill{oldeofill}d
/fill{oldfill}d/stroke{oldstroke}d/show{oldshow}d/widthshow{oldwidthshow}d}ife end}d
false PATredef
/PATdraw{PATpcalc gs 5 -1 roll exec np PATfill gr}d
/PATstroke{{cup strokepath m PATpcalc gs clip np PATfill gr np}stopped
{0.1 g oldstroke (Path is too complex, filling with light gray)=}if}d
/PATsstr 1 string def/PATawidthshow{{dup PATsstr dup 0 4 -1 roll put
false charpath/clip load PATdraw cup np m
3 ix eq{4 ix 4 ix rm}if 2 copy rm}forall
p p p p p cup np m}d/PATDict 3 dict def/PATsp{true PATredef PATDict begin/CurrentPattern xd
CurrentPattern/PaintType get 2 eq{/PColor xd}if/CColor[currentrgbcolor]def end}d
/PATusp{false PATredef PATDict begin CColor aload p c end p}d
/pdictt 20 dict def
pdictt begin/dummy null def/PaintType 1 def/PatternType 1 def/TilingType 2 def/BBox[0 0 1 1]def
/XStep 1 def/YStep 1 def/Multi 2 def/PaintData[{0 0 m 0 1 rl 1 0 rl 0 -1 rl cp
PaintColors 0 get dup null ne{f}if p}
{ptw pth polar[ptw 0 0 pth neg 0 ptw]{Bitmap}imagemask}]def
/PaintProc{begin exec end}d end/makedict{pdictt 20 dict copy dup begin
x/Bitmap xd x/PaintColors xd gs initmatrix 1 1 drx idtransform sc
PaintColors 1 get null eq{false /polar xd
PaintColors 1 PaintColors 0 get put PaintColors 0 null put}{true /polar xd}ife
[ptws 0 0 pths 0 0]PATmp gr end}d
/setpat{/pth xd/ptw xd/pths xd/ptws xd makedict/instpat xd instpat PATsp}d/unsetpat{instpat PATusp}d
/snl{{/noload sv def}if}d/enl{{noload rs}if}d/nc 1 def
/colorimage where{p true}{false}ife{/nc 0
statusdict begin/processcolors where{p p processcolors}
{/deviceinfo where{p deviceinfo/Colors known
{p{deviceinfo/Colors get}}if}if}ife end def
nc 0 ne{systemdict/colorimage known
systemdict/setcolortransfer known
systemdict/currentcolortransfer known
systemdict/currentcmykcolor known
and and and not{/nc 0 def}if}if}if
nc dup 1 ne x dup 3 ne x 4 ne and and{/nc 0 def}if
nc 1 eq dup dup not snl{
/expandbw{expandfactor mul round cvi bwclut x get 255 div}d
/doclutimage{p/bwclut xd bpc dup 8 eq{p 255}{4 eq{15}{3}ife}ife
/expandfactor xd[/expandbw load/exec load dup currenttransfer x]
cvx bind settransfer
iw ih bpc[1 0 0 -1 0 ih]setupimageproc
image}d}if
not enl
nc dup 3 eq x 4 eq or
dup dup not snl{/nullproc{{}}def
/concatutil{/exec load 7 -1 roll/exec load}d/defsubclut{1 add getinterval def}d
/spconcattransfer{/Dclut x def/Cclut x def/Bclut x def/Aclut x def/ncompute x l
currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut ncompute}concatutil]cvx
[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}concatutil]cvx
setcolortransfer}d/setuprgbcluts{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut
/bclut rclut 2 bit3x defsubclut}d}if not enl
nc 3 eq dup dup not snl{/3compute{x bit3x mul round cvi get 255 div}d
/doclutimage{/rgbclut xd p setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup]cvx
nullproc nullproc true 3 colorimage}d}if not enl
nc 4 eq
dup dup not snl{/stuffclut{cmykindex 3 -1 roll put}d
/ftoint{1 x sub 255 mul round cvi}d/4compute{x bit4x mul round cvi get 255 div}d
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut/cmykindex 0 def
0 1 bit1x{dup/cmykindex x
bit1x x sub 4 mul def 3 mul dup rclut x get 255 div
x dup gclut x get 255 div x bclut x get 255 div
setrgbcolor currentcmykcolor ftoint kclut stuffclut
ftoint yclut stuffclut ftoint mclut stuffclut
ftoint cclut stuffclut}for}d/doclutimage{/rgbclut xd p invalidcolortable?
{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer
iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup dup]cvx
nullproc nullproc nullproc true 4 colorimage}d}if not enl
nc 0 eq dup dup not
snl{/las{3 mul 3 getinterval putinterval x
3 add x 3 copy}d/8lookup/las l/4lookup{/byte 1 ix def -4 bitshift
las byte 15 and las}d
/2lookup{/byte 1 ix def -6 bitshift las
byte -4 bitshift 3 and las byte -2 bitshift
3 and las byte 3 and las}d/colorexpand{mystringexp 0 rgbclut
3 copy 7 -1 roll/mylookup load forall p p p p p}d
/createexpandstr{/mystringexp x mystring length mul string def}d
/doclutimage{/rgbclut xd p/mylookup bpc 8 eq
{3 createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12 createexpandstr
/2lookup}ife}ife l iw ih bpc[1 0 0 -1 0 ih]
[setupimageproc/exec load/colorexpand load/exec load]cvx
false 3 colorimage}d}if not enl
/colorimage where{p true}{false}ife dup{/do24image{iw ih 8[1 0 0 -1 0 ih]
setupimageproc false 3 colorimage}d}if
dup dup snl not{/rgbtogray{/str xd/len str length def/smlen len 3 idiv def
/rstr str def/gstr str 1 len 1 sub getinterval def/bstr str 2 len 2 sub getinterval def
str dup 0 1 smlen 1 sub{dup 3 mul rstr 1 ix get .3 mul
gstr 2 ix get .59 mul add bstr 3 -1 roll get .11 mul add
round cvi put dup}for p 0 smlen getinterval}d/do24image{iw ih 8[1 0 0 -1 0 ih]
[setupimageproc/exec load/rgbtogray load/exec load]cvx bind
image}d}if enl/doimage{iw ih 8[1 0 0 -1 0 ih]setupimageproc image}d
/setup1asciiproc{[currentfile mystring/rh cvx/p cvx]cvx bind}d
/setup1binaryproc{[currentfile mystring/readstring cvx/p cvx]cvx bind}d
/iw 0 def/ih 0 def/im_save 0 def/setupimageproc 0 def/polarity 0 def
/smoothflag 0 def/mystring 0 def/bpc 0 def/beginimage{/im_save sv def dup 0 eq
{p/setup1binaryproc}{1 eq{/setup1asciiproc}
{(error, can't use level2 data acquisition procs for level1)print flush}ife}ife
/setupimageproc x l/polarity xd/smoothflag xd tr sc/mystring x string def/bpc xd/ih xd/iw xd}d
/endimage{im_save rs np}d/1bitbwcopyimage{1 g 0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
0 g iw ih polarity[1 0 0 -1 0 ih]setupimageproc imagemask}d/1bitcopyimage{setrgbcolor
0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
setrgbcolor iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d/1bitmaskimage{setrgbcolor
iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d
/BeginEPSF{end
userdict begin
/b4_Inc_state save def/showpage{}def/d_cnt countdictstack def/op_cnt count 1 sub def
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit[]0 setdash newpath/languagelevel where{pop languagelevel 1 ne
{false setstrokeadjust false setoverprint}if}if}bind def
end
/EndEPSF{count op_cnt sub{pop}repeat
countdictstack d_cnt sub{end}repeat b4_Inc_state end restore wpdict begin newpath}bind def
%%EndResource
%%EndProlog
%%BeginSetup
/#copies 1 def 
wpdict begin
mcm
[0.0 0.0 0.0 0.0 0.0 0.0 ] concat
mcm
/cml 0 def
1 1 dtransform dup 0 ne{div}{pop pop 1}ife /xRyR xd
sm
mcm
sm
sm
icl end
wpdict begin/platrc{dup FontDirectory x known{findfont}{dup nb cvs dup length 1 sub get 82 eq
{dup nb cvs dup length 1 sub 0 x getinterval findfont begin currentdict dup
length dict begin{1 ix/FID ne{def}{p p}ife}forall/FontName xd/Encoding PFen def
currentdict dup end end/FontName get x definefont}{findfont}ife}ife}d
/platff{x platrc x 3 div dup/psz xd scalefont dup/bf xd setfont}d
/PFen StandardEncoding 256 array copy def 0[0/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/ring/cedilla/hungarumlaut
/ogonek/caron/dotlessi 39/quotesingle 96/grave
124/bar 130/quotesinglbase/florin/quotedblbase
/ellipsis/dagger/daggerdbl 137/perthousand/Scaron
/guilsinglleft/OE 145/quoteleft/quoteright
/quotedblleft/quotedblright/bullet/endash
/emdash 153/trademark/scaron/guilsinglright/oe
159/Ydieresis/space 164/currency 166/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft
/logicalnot/hyphen/registered/macron/degree
/plusminus/twosuperior/threesuperior/acute
/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf
/threequarters/questiondown/Agrave/Aacute
/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth
/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute
/thorn/ydieresis]
{dup type/nametype eq{PFen 2 ix 2 ix put p 1 add}{x p}ife}forall p end
save
%%EndSetup
letter 
%%Page: 1 1 
%%PageBoundingBox: (atend)

wpdict begin
mcm
sm
mcm
/cml 0 def
1 1 dtransform dup 0 ne{div}{pop pop 1}ife /xRyR xd

bp
0 13200 10200 co
/HelveticaR 500 ff
0 13200 10200 co
mcm
1200.0 3352.0 tr
1.0 -1.0 sc
np 0 0 m
2397 0 li 2397 15 li 0 15 li cp
0 255 div g
[] 0 sd 16 w 0 lj 0 lc fill 0 w sm
icl np
1200 2982 m
0 255 div g
1800 2982 m
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 (Don\251t worry, I have not left out the )W
10 0 32 (BandScope)W
10 0 32 ( feature. This is a complex enough feature to)W
1800 3057 m
/HelveticaR 300 ff
(1)S
/HelveticaR 500 ff
1200 2792 m
10 0 32 (merit its own section.)W
1200 2402 m
1800 2402 m
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 (If you are unfamiliar with serial port programming, I suggest you get a crash course in it by)W
1800 2477 m
/HelveticaR 300 ff
(2)S
/HelveticaR 500 ff
1200 2212 m
10 0 32 (checking out the Serial Port Programming HOW-TO at )W
28 255 div g
U 10 0 32 (http://www.linux-howto.com)W
0 255 div g
u 10 0 32 ( )W
1200 1822 m
1800 1822 m
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 (Note that throughout this whole explanation you should be doing some error checking to exit)W
1800 1897 m
/HelveticaR 300 ff
(3)S
/HelveticaR 500 ff
1200 1632 m
10 0 32 (gracefully. Remember, )W
/CourierR 500 ff
(perror)S
/HelveticaR 500 ff
10 0 32 (\(\) is your friend. He lives in )W
/CourierR 500 ff
(stdio)S
(.h)S
/HelveticaR 500 ff
10 0 32 ( and )W
/CourierR 500 ff
(errno)S
(.h)S
/HelveticaR 500 ff
10 0 32 (. Be nice and use)W
1200 1418 m
10 0 32 (him as much as you want, you\251ll be better off. As an example, if you cannot open /dev/ttyS0 \(which if)W
1200 1228 m
10 0 32 (this is your first time playing with the serial port, as a normal user... which you should be doing it as)W
1200 11773 m
/Helvetica-BoldR 745 ff
2726 h (PCR)S
14 0 32 (-1000 radio for )W
1200 11500 m
2465 h 14 0 32 (UN*X GUI Development )W
1200 11227 m
2712 h 14 0 32 (and an )W
14 0 32 (OOP)W
14 0 32 ( Library)W
1200 11018 m
/Helvetica-BoldR 500 ff
3172 h 10 0 32 (Part II: The )W
10 0 32 (Comm)W
1200 10639 m
/Helvetica-ObliqueR 500 ff
5815 h 10 0 32 (A Ghetto.)W
10 0 32 (Org)W
10 0 32 ( Investigation)W
1200 10449 m
/HelveticaR 500 ff
6065 h (PolyWog)S
10 0 32 ( and )W
10 0 32 (Javaman)W
1200 10259 m
6360 h 10 0 32 (17 November 1999)W
1200 9852 m
/Helvetica-BoldR 600 ff
(Objective:)S
1200 9655 m
/HelveticaR 500 ff
1800 9655 m
10 0 32 (Create a shared object \(or static\) library for facilitation of the )W
10 0 32 (Icom)W
10 0 32 ( )W
10 0 32 (PCR)W
10 0 32 (-1000 UN*X interface.)W
1200 9465 m
10 0 32 (Create a GUI and command line interface for the )W
10 0 32 (Icom)W
10 0 32 ( )W
10 0 32 (PCR)W
10 0 32 (-1000 all band, all mode receiver. )W
1200 9058 m
/Helvetica-BoldR 600 ff
(PCR)S
11 0 32 (-1000 Comm Port Specs:)W
1200 8861 m
/HelveticaR 500 ff
1800 8861 m
10 0 32 (Now that you have the protocol memorized,)W
/HelveticaR 300 ff
56 h 5 0 32 ()W
/HelveticaR 500 ff
10 0 32 ( we can move on to the second most important)W
5076 8936 m
/HelveticaR 300 ff
(1)S
/HelveticaR 500 ff
1800 8671 m
10 0 32 (part: )W
10 0 32 (talking)W
10 0 32 ( to your radio and listening to what your radio has to say. This part is devoted)W
1800 8481 m
10 0 32 (entirely to someone who is already familiar with serial port programming under UN*X)W
1800 8291 m
(environments.)S
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 ( It assumes the basic knowledge encapsulated in the Serial-Programming-)W
2848 8366 m
/HelveticaR 300 ff
(2)S
/HelveticaR 500 ff
1800 8101 m
(HOWTO)S
10 0 32 (; )W
10 0 32 (for)W
10 0 32 ( example, setting baudrates, opening UN*X file descriptors for character devices,)W
1800 7911 m
10 0 32 (and the various other info located in the )W
/CourierR 500 ff
(termios.h)S
/HelveticaR 500 ff
10 0 32 ( header file.)W
1200 7507 m
1800 7507 m
U 10 0 32 (Getting Started)W
u 10 0 32 (:)W
1200 7317 m
1800 7317 m
10 0 32 (Making first contact is usually a very dangerous and delicate process. It involves use of the)W
1200 7127 m
10 0 32 (correct settings and functions. Some basic information that you will have to know \(specific to your)W
1200 6937 m
10 0 32 (system\) is what comm port the radio is attached to, and what device you would like to use in)W
1200 6747 m
10 0 32 (conjunction with that particular comm port. For example, on my laptop, I have the radio attached to)W
1200 6557 m
10 0 32 (comm one. On boot up, the )W
10 0 32 (IRQ)W
10 0 32 (\251s \(etc\) are set automagically by the Slackware )W
/CourierR 500 ff
(rc)S
(.serial)S
/HelveticaR 500 ff
10 0 32 ( script. Most)W
1200 6343 m
10 0 32 (times this should be enough to start catting stuff to and from )W
/CourierR 500 ff
(/dev/ttyS0)S
/HelveticaR 500 ff
10 0 32 ( or )W
/CourierR 500 ff
(/dev/cua0)S
/HelveticaR 500 ff
10 0 32 ( \(since comm)W
1200 6129 m
10 0 32 (one = 0, two = 1, three = 2, etc...\) )W
1200 5939 m
1800 5939 m
10 0 32 (But alas, no! For the script sets the comm port to 38600 baud \(most distributions assume that)W
1200 5749 m
10 0 32 (you are going to use some fancy piece of hardware like a 14.4 modem where this would be )W
10 0 32 (desireable)W
1200 5559 m
10 0 32 (;^\) On power-up the )W
10 0 32 (PCR)W
10 0 32 (-1000 can only understand the universal 9600 baud speed rate. So what we)W
1200 5369 m
10 0 32 (have to do is tell the software to save the current comm port settings and alter them for the run of the)W
1200 5179 m
10 0 32 (program, then set it back when )W
10 0 32 (it\251s)W
10 0 32 ( done playing with the port. Consider it )W
/Helvetica-ObliqueR 500 ff
10 0 32 (protection)W
/HelveticaR 500 ff
10 0 32 (... in case)W
1200 4989 m
10 0 32 (something gets )W
10 0 32 (foobar\251d)W
10 0 32 (. So, let\251s start to play, shall we?)W
1200 4609 m
1800 4609 m
U (FD)S
10 0 32 ( Haven)W
u 10 0 32 (:)W
1200 4419 m
1800 4419 m
10 0 32 (First, we open and grab a file descriptor to our preferred device \(for the purposes of modern)W
1200 4229 m
10 0 32 (technology, let\251s use )W
/CourierR 500 ff
(/dev/ttyS0)S
/HelveticaR 500 ff
10 0 32 (\) This device should be opened with the flag options of read/write)W
1200 4015 m
(\(O_)S
(RDWR)S
10 0 32 (\), and not as a controlling )W
10 0 32 (ttty)W
10 0 32 ( \(O_)W
10 0 32 (NOCTTY)W
10 0 32 (\). We want to open it with the O_)W
10 0 32 (NOCTTY)W
10 0 32 ( flag,)W
1200 3825 m
10 0 32 (because we do not want to get killed if some ghetto ass blow dryer \(or even another radio itself\) sends)W
1200 3635 m
10 0 32 (some line noise that the computer could interpret as a CTRL-C.)W
/HelveticaR 300 ff
56 h 5 0 32 ()W
/HelveticaR 500 ff
5971 3710 m
/HelveticaR 300 ff
(3)S
/HelveticaR 500 ff
ep
sm
icl end
%%PageTrailer

%%PageBoundingBox: 72 62 612 733 

%%Page: 2 2 
%%PageBoundingBox: (atend)

wpdict begin
mcm
sm
mcm
/cml 0 def
1 1 dtransform dup 0 ne{div}{pop pop 1}ife /xRyR xd

bp
/HelveticaR 500 ff
0 13200 10200 co
mcm
1200.0 3010.0 tr
1.0 -1.0 sc
np 0 0 m
2397 0 li 2397 15 li 0 15 li cp
0 255 div g
16 w fill 0 w sm
icl np
1200 2640 m
0 255 div g
(anyways)S
10 0 32 (, you\251ll run into permission problems\) then you should check to see if the file descriptor is <0. If)W
1200 2450 m
10 0 32 (it is then catch that and use )W
10 0 32 (perror)W
10 0 32 (\(\) )W
10 0 32 (thusly)W
10 0 32 (: )W
/CourierR 500 ff
(perror)S
(\(\252)S
(shite)S
(! I )S
(couldnt)S
( open /dev/ttyS0"\);)S
1200 2236 m
/HelveticaR 500 ff
10 0 32 (this will tell you exactly, )W
/Helvetica-ObliqueR 500 ff
10 0 32 (why)W
/HelveticaR 500 ff
10 0 32 ( you could not open )W
/CourierR 500 ff
(/dev/ttyS0.)S
/HelveticaR 500 ff
10 0 32 ( Make sure you exit with an error code)W
1200 2022 m
10 0 32 (\(for me, I just usually )W
/CourierR 500 ff
(exit\(-1\);)S
/HelveticaR 500 ff
10 0 32 ( )W
/CourierR 500 ff
(exit)S
/HelveticaR 500 ff
10 0 32 (\(\) can be found in )W
/CourierR 500 ff
(unistd)S
(.h)S
/HelveticaR 500 ff
10 0 32 (\))W
1200 1608 m
1800 1608 m
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 (You may feel so )W
10 0 32 (inclined)W
10 0 32 ( to initialize your control characters, so that you can set the blocking)W
1800 1683 m
/HelveticaR 300 ff
(4)S
/HelveticaR 500 ff
1200 1418 m
10 0 32 (timer, or minimum read. I haven\251t )W
10 0 32 (putzed)W
10 0 32 ( with this yet, but you really don\251t need it since it is not )W
/Helvetica-ObliqueR 500 ff
10 0 32 (true)W
1200 1228 m
/HelveticaR 500 ff
10 0 32 (asynchronous I/O. )W
1200 11648 m
1800 11648 m
U 10 0 32 (Serial Etiquette)W
u 10 0 32 (: )W
1200 11458 m
1800 11458 m
10 0 32 (Now, we save the current state of the serial port, so that we can reset it after we are done. You)W
1200 11268 m
10 0 32 (wouldn\251t want to leave any of your users surfing the net at 9600 baud, now would )W
10 0 32 (you ;)W
10 0 32 (^\) The easiest)W
1200 11078 m
10 0 32 (way to do this is to create two )W
/CourierR 500 ff
(termios)S
/HelveticaR 500 ff
10 0 32 ( objects. Get the current term attributes into one \(labeled)W
1200 10864 m
10 0 32 (something like )W
/CourierR 500 ff
(old_)S
(foo)S
/HelveticaR 500 ff
10 0 32 (\) and )W
/CourierR 500 ff
(bzero)S
/HelveticaR 500 ff
10 0 32 (\(\) the other one. At the end of your program, or in one of your)W
1200 10650 m
/CourierR 500 ff
(SIGTERM)S
/HelveticaR 500 ff
10 0 32 (, )W
/CourierR 500 ff
(SIGBRK)S
/HelveticaR 500 ff
10 0 32 ( handlers \(yeah, you should be adding handlers, but if not, that\251ll be our secret\) you)W
1200 10436 m
10 0 32 (set the attributes of the )W
/CourierR 500 ff
(old_)S
(foo)S
/HelveticaR 500 ff
10 0 32 ( object back. After )W
/CourierR 500 ff
(bzero)S
(\(\))S
/HelveticaR 500 ff
10 0 32 (\251)W
10 0 32 (ing)W
10 0 32 ( the new one, you want to start playing)W
1200 10222 m
10 0 32 (with the new object\251s settings.)W
1200 9842 m
1800 9842 m
U 10 0 32 (The Wind-Up)W
u 10 0 32 (:)W
1200 9652 m
1800 9652 m
10 0 32 (First you should set the baud rate for the new object. There are several ways of doing this, but)W
1200 9462 m
10 0 32 (one way is to use )W
/CourierR 500 ff
(cfsetispeed)S
/HelveticaR 500 ff
10 0 32 (\(\) and )W
/CourierR 500 ff
(cfsetospeed)S
/HelveticaR 500 ff
10 0 32 (\(\) your )W
/CourierR 500 ff
(new_)S
(foo)S
/HelveticaR 500 ff
10 0 32 ( to )W
/CourierR 500 ff
(B9600)S
/HelveticaR 500 ff
10 0 32 (. Now you want to)W
1200 9248 m
10 0 32 (alter the object\251s control modes \()W
/CourierR 500 ff
(c_)S
(cflag)S
/HelveticaR 500 ff
10 0 32 (\). Let\251s think about the control modes that we will need. It\251s)W
1200 9034 m
10 0 32 (going to be a local connection, with no modem control. You will also need to enable receiving)W
1200 8844 m
10 0 32 (characters, as well as, disabling parity generation on output and parity checking on input. You will also)W
1200 8654 m
10 0 32 (want to set one stop bit rather than two, remove whatever character size mask it currently has, because)W
1200 8464 m
10 0 32 (you want to set it to eight bits. Finally the most important control mode, is to stop the hardware from)W
1200 8274 m
10 0 32 (lowering the modem control lines after the program exits. This is useful if you want to set a radio setting)W
1200 8084 m
10 0 32 (and keep the radio going after the program finishes \(or hangs up the device.\) In summation for the)W
1200 7894 m
10 0 32 (control flags, in the following order, you want to logic-or )W
/CourierR 500 ff
(CLOCAL)S
/HelveticaR 500 ff
10 0 32 ( and )W
/CourierR 500 ff
(CREAD)S
/HelveticaR 500 ff
10 0 32 (, logic-and not-)W
/CourierR 500 ff
(HUPCL)S
/HelveticaR 500 ff
10 0 32 (, not-)W
1200 7680 m
/CourierR 500 ff
(PARENB)S
/HelveticaR 500 ff
10 0 32 (, not-)W
/CourierR 500 ff
(CSTOPB)S
/HelveticaR 500 ff
10 0 32 (, not-)W
/CourierR 500 ff
(CSIZE)S
/HelveticaR 500 ff
10 0 32 (, and finally logic-or )W
/CourierR 500 ff
(CS8)S
/HelveticaR 500 ff
10 0 32 (. )W
1200 7466 m
1800 7466 m
10 0 32 (For the local modes \()W
/CourierR 500 ff
(c_)S
(lflag)S
/HelveticaR 500 ff
10 0 32 (\), you want to enable canonical input, while disabling all echo)W
1200 7252 m
10 0 32 (functionality. In the following order you want to: logic-or )W
/CourierR 500 ff
(ICANON)S
/HelveticaR 500 ff
10 0 32 (, and logic-and not-\()W
/CourierR 500 ff
(ECHO)S
/HelveticaR 500 ff
10 0 32 ( or )W
/CourierR 500 ff
(ECHOCTL)S
/HelveticaR 500 ff
10 0 32 (\).)W
1200 7038 m
10 0 32 (For the output modes, you want to disable implementation-defined processing. A simple logic-and not-)W
1200 6848 m
/CourierR 500 ff
(OPOST)S
( )S
/HelveticaR 500 ff
10 0 32 (will take care of that. And that\251s pretty much it. You are ready to roll as far as calling)W
1200 6634 m
/CourierR 500 ff
(tcsetattr)S
/HelveticaR 500 ff
10 0 32 (\(\) to )W
/CourierR 500 ff
(TCSANOW)S
/HelveticaR 500 ff
10 0 32 ( your new termios object.)W
/HelveticaR 300 ff
56 h 5 0 32 ()W
/HelveticaR 500 ff
10 0 32 ( You may want to flush first \(the port, that is\). I)W
5056 6709 m
/HelveticaR 300 ff
(4)S
/HelveticaR 500 ff
1200 6420 m
10 0 32 (don\251t, though.)W
1200 6040 m
1800 6040 m
U 10 0 32 (The Catch)W
u 10 0 32 (: )W
1200 5850 m
1800 5850 m
(Ok)S
10 0 32 (, so you are saying that it cannot be this easy? Well, actually, it is.... )W
10 0 32 (um)W
10 0 32 (, kind of. See there)W
1200 5660 m
10 0 32 (are some interesting little bugs in the )W
10 0 32 (PCR)W
10 0 32 (-1000 that could send you for a 3 hour loop, as it did to me)W
1200 5470 m
10 0 32 (when I first encountered it... and you are getting it here free of charge ;^\))W
1200 5280 m
1800 5280 m
10 0 32 (1. In )W
/CourierR 500 ff
(G300)S
/HelveticaR 500 ff
10 0 32 ( mode, \(autoupdate off\) you want to be wary of how many )W
/CourierR 500 ff
(write)S
/HelveticaR 500 ff
10 0 32 (\(\)\251s you do before)W
1200 5066 m
10 0 32 (you )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\). If you tell the radio to go into )W
/CourierR 500 ff
(G300)S
/HelveticaR 500 ff
10 0 32 ( mode, and then ask it to make you coffee, when you)W
1200 4852 m
10 0 32 (listen to what it has to say, you have to remember that it will always, blabber a new line. This new line)W
1200 4662 m
10 0 32 (is one char long, so you \(should always check and\) )W
10 0 32 (can )W
/Helvetica-ObliqueR 500 ff
10 0 32 (always)W
/HelveticaR 500 ff
10 0 32 ( ignore)W
10 0 32 ( )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\) counts that are equal to)W
1200 4448 m
10 0 32 (one byte. )W
1200 4258 m
1800 4258 m
10 0 32 (2. )W
10 0 32 (If you send it more than one command before listening to a response, )W
/Helvetica-ObliqueR 500 ff
10 0 32 (always)W
/HelveticaR 500 ff
10 0 32 ( )W
/Helvetica-ObliqueR 500 ff
10 0 32 (remember)W
/HelveticaR 500 ff
10 0 32 ( that)W
1200 4068 m
10 0 32 (you will have to )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\) as many times as )W
/CourierR 500 ff
(write)S
/HelveticaR 500 ff
10 0 32 (\(\)\251s you sent it.)W
10 0 32 ( The first )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\) will be for the first)W
1200 3854 m
/CourierR 500 ff
(write)S
/HelveticaR 500 ff
10 0 32 (\(\) you sent it. The second )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\) for the second )W
/CourierR 500 ff
(write)S
/HelveticaR 500 ff
10 0 32 (\(\) etc. etc. )W
10 0 32 (. . .)W
10 0 32 (    Remember that)W
1200 3640 m
10 0 32 (asynchronous thing I was talking about? Well, that\251s where this would come in )W
10 0 32 (handy ;)W
10 0 32 (^\))W
1200 3450 m
1800 3450 m
10 0 32 (3. If you are /<)W
10 0 32 (R4d)W
10 0 32 ( 31337 enough to be using )W
/CourierR 500 ff
(read)S
/HelveticaR 500 ff
10 0 32 (\(\) instead of some other lame ass call \()W
10 0 32 (ie)W
10 0 32 (: if)W
ep
sm
icl end
%%PageTrailer

%%PageBoundingBox: 72 78 612 733 

%%Page: 3 3 
%%PageBoundingBox: (atend)

wpdict begin
mcm
sm
mcm
/cml 0 def
1 1 dtransform dup 0 ne{div}{pop pop 1}ife /xRyR xd

bp
/HelveticaR 500 ff
0 13200 10200 co
mcm
1200.0 1598.0 tr
1.0 -1.0 sc
np 0 0 m
2397 0 li 2397 15 li 0 15 li cp
0 255 div g
16 w fill 0 w sm
icl np
1200 1228 m
0 255 div g
1800 1228 m
/HelveticaR 300 ff
56 h ()S
/HelveticaR 500 ff
10 0 32 (Can\251t you just hear the sinister music ;^\))W
1800 1303 m
/HelveticaR 300 ff
(5)S
/HelveticaR 500 ff
1200 11838 m
10 0 32 (you did an )W
/CourierR 500 ff
(fdopen)S
/HelveticaR 500 ff
10 0 32 (\(\) on the socket, and are using )W
/CourierR 500 ff
(fprintf)S
/HelveticaR 500 ff
10 0 32 (\(\) or )W
/CourierR 500 ff
(fscanf)S
/HelveticaR 500 ff
10 0 32 (\(\) \) then remember to put a)W
1200 11624 m
10 0 32 (null after the last character of the buffer read in. You should be keeping track of the number of bytes)W
1200 11434 m
10 0 32 (read anyway, so doing a )W
/CourierR 500 ff
(foo)S
(_)S
(buf)S
([bar]=0;)S
/HelveticaR 500 ff
10 0 32 ( should be sufficient if )W
/CourierR 500 ff
(bar)S
/HelveticaR 500 ff
10 0 32 ( is the number of bytes read in,)W
1200 11220 m
10 0 32 (and )W
/CourierR 500 ff
(foo)S
(_)S
(buf)S
/HelveticaR 500 ff
10 0 32 ( is your buffer string.)W
1200 10816 m
1800 10816 m
U (WTF)S
10 0 32 ( Are You Talking About)W
u 10 0 32 (:)W
1200 10626 m
1800 10626 m
10 0 32 (If you didn\251t understand any of that above, )W
10 0 32 (RTFM)W
10 0 32 (!! Get the serial programming )W
10 0 32 (HOWTO)W
10 0 32 ( and)W
1200 10436 m
10 0 32 (don\251t move until you understand what\251s going on!)W
1200 10056 m
10 0 32 (Next Up: [Part III: The Notorious BandScope])W
/HelveticaR 300 ff
56 h 5 0 32 ()W
/HelveticaR 500 ff
4584 10131 m
/HelveticaR 300 ff
(5)S
/HelveticaR 500 ff
ep
sm
icl end
%%PageTrailer

%%PageBoundingBox: 72 66 537 733 

%%Trailer
%%DocumentSuppliedFonts: 

%%DocumentNeededFonts: 
%%+ Courier
%%+ Helvetica
%%+ Helvetica-Bold
%%+ Helvetica-Oblique

%%BoundingBox: 72 62 612 733 
%%Pages: 3 
restore
%%EOF
